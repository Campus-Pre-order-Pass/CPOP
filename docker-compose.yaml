version: "3"

services:
  # server:
  #   build:
  #     context: ./Server
  #     dockerfile: Dockerfile
  #   command: python manage.py runserver 0.0.0.0:8000 --settings=Backend.settings_prod
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - celery
  #     - flower
  #   networks:
  #     - mynetwork # 添加这一行

  cpop_web:
    image: shiraoyuki/cpop_ui:latest
    ports:
      - "3000:3000"
    networks:
      - mynetwork

  celery:
    build:
      context: ../../Server
      dockerfile: Dockerfile
    command: celery -A Backend worker -l info
    networks:
      - mynetwork

  flower:
    build:
      context: ../../Server
    command: celery -A Backend flower -l info --basic_auth=twtrubiks:password123
    ports:
      - "5555:5555"
    networks:
      - mynetwork

  beat:
    build:
      context: ../../Server
      dockerfile: Dockerfile
    command: celery -A Backend beat -l info
    restart: always
    depends_on:
      - rabbitmq
    networks:
      - mynetwork

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3.12.6-management
    environment:
      RABBITMQ_DEFAULT_USER: celery
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: my_vhost
      TZ: Asia/Taipei # 设置时区为 "Asia/Taipei"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork
  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - mynetwork # 添加这一行

  # docusaurus:
  #   build:
  #     context: ./cpop-docs
  #     dockerfile: Dockerfile
  #   ports:
  #     - "9001:9001"
  #   # volumes:
  #   # - /var/run/docker.sock:/var/run/docker.sock
  #   restart: always
  #   networks:
  #     - mynetwork # 添加这一行

  # vscode-server:
  #   image: codercom/code-server
  #   ports:
  #     - "0.0.0.0:9002:8080"
  #   volumes:
  #     - ./config:/home/coder/.config/code-server
  #     - /Users/hungwei/Desktop/code/CPOP:/home/coder/project
  #   environment:
  #     - PASSWORD=my-secret-password
  #   networks:
  #     - mynetwork

  # username: Twp2xtDcQp9X9eh8Bw27BBYpESzWWV7W
  # password: 76MRghEvdGqvn9fWWqCHqZnTntVmc8xw
  # sentry:
  #   image: getsentry/sentry:latest
  #   environment:
  #     - SENTRY_SECRET_KEY=your-secret-key
  #     - SENTRY_POSTGRES_HOST=sentry-postgres
  #     - SENTRY_DB_USER=sentry
  #     - SENTRY_DB_PASSWORD=your-db-password
  #   ports:
  #     - "9010:9000"
  #   depends_on:
  #     - sentry-postgres
  #     - redis
  #   networks:
  #     - mynetwork

  # sentry-postgres:
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_PASSWORD=your-db-password
  #     - POSTGRES_USER=sentry
  #   networks:
  #     - mynetwork
  # gitlab:
  #   image: gitlab/gitlab-ce
  #   hostname: gitlab.me
  #   container_name: gitlab-main
  #   restart: always
  #   environment:
  #     GITLAB_OMNIBUS_CONFIG: |
  #       external_url "http://gitlab.me"
  #       letsencrypt['enable'] = false
  #   volumes:
  #     - /path/to/your/gitlab/config:/etc/gitlab
  #     - /path/to/your/gitlab/logs:/var/log/gitlab
  #     - /path/to/your/gitlab/data:/var/opt/gitlab
  #     - /path/to/your/var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   extra_hosts:
  #     - "gitlab.me:192.168.0.101"
  #   networks:
  #     - mynetwork

networks:
  mynetwork:
